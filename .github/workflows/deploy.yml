name: Build-and-Deploy-Azure-Function

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show repo tree (debug)
        # uncomment to debug file paths
        run: ls -R

      - name: Setup Node (if Node runtime)  # adjust for Python/.NET
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./src/function
        run: npm install

      - name: Build (if applicable)
        working-directory: ./src/function
        run: npm run build || echo "no build step"

      - name: Zip function package (write zip to repo root)
        working-directory: ./src/function
        run: |
          ZIP_PATH="$GITHUB_WORKSPACE/function-package.zip"
          rm -f "$ZIP_PATH"
          zip -r "$ZIP_PATH" .
          echo "Created $ZIP_PATH"
          ls -lh "$ZIP_PATH"

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get function name and resource group (from terraform outputs or fallbacks)
        id: get_names
        run: |
          # prefer terraform outputs if a state exists in terraform/
          if [ -f terraform/terraform.tfstate ]; then
            # Replace 'function_name' and 'resource_group' with your terraform output names
            FN=$(cd terraform && terraform output -raw function_name 2>/dev/null || true)
            RG=$(cd terraform && terraform output -raw resource_group 2>/dev/null || true)
          fi

          # Fallbacks if outputs not available
          if [ -z "$FN" ]; then
            FN="demo-func-app"
          fi
          if [ -z "$RG" ]; then
            RG="demo-func-rg"
          fi

          echo "FUNCTION_NAME=$FN" >> $GITHUB_ENV
          echo "RG=$RG" >> $GITHUB_ENV
          echo "function_name=$FN" >> $GITHUB_OUTPUT
          echo "resource_group=$RG" >> $GITHUB_OUTPUT

      - name: Deploy zip to Function App
        run: |
          echo "Deploying $FUNCTION_NAME in resource group $RG"
          az functionapp deployment source config-zip \
            --resource-group "$RG" \
            --name "$FUNCTION_NAME" \
            --src "$GITHUB_WORKSPACE/function-package.zip"
